DROP TABLE IF EXISTS FeedbackAns;
DROP TABLE IF EXISTS User_has_Event;
DROP TABLE IF EXISTS Events;
DROP TABLE IF EXISTS AppUser;
DROP TABLE IF EXISTS Calendar;
DROP TABLE IF EXISTS Email;
DROP TABLE IF EXISTS CompanyType;

CREATE TABLE Email
(
	Email VARCHAR(50) NOT NULL,
	EmailStatus BINARY,
	PRIMARY KEY (Email)
);

INSERT INTO Email(Email, EmailStatus) VALUES
('Jacob@ABC.com', 0), 
('John@JohnFoods.com', 0), 
('Sushma@TribeA.com', 0);

CREATE TABLE AppUser
(
	UserName VARCHAR(50) NOT NULL,
	User_PW VARBINARY(50) NOT NULL,
	RepName VARCHAR(50) NOT NULL,
	Contact_Num INT NOT NULL,
	CompanyName VARCHAR(50) NOT NULL,
	CompanyWebsite VARCHAR(50) NOT NULL,
	CompanyIndustry VARCHAR(50) NOT NULL,
	CompanySize VARCHAR(50) NOT NULL,
	CompanyType VARCHAR(50) NOT NULL,
	Email VARCHAR(50) NOT NULL,
	PRIMARY KEY (UserName),
	FOREIGN KEY (Email) REFERENCES Email(Email)
);

CREATE TABLE CompanyType
(
	CompanyTypeId INT NOT NULL,
	TypeDesc VARCHAR(20) NOT NULL,
	PRIMARY KEY (CompanyTypeId)
);
INSERT INTO CompanyType(CompanyTypeId, TypeDesc) VALUES 
(1, 'Admin'), 
(2, 'Current'), 
(3, 'Alumni'),
(4, 'Current, Alumni');




INSERT INTO AppUser(UserName, User_PW, RepName, Contact_Num, CompanyName, CompanyWebsite, CompanyIndustry, CompanySize, CompanyType, Email) VALUES 
('ABC', HASHBYTES('SHA1', 'password0'), 'Jacob', 98540091, 'ABC Company', 'www.ABCTech.com', 'HealthTech', '1-10', 'Current', 'Jacob@ABC.com'), 
('JohnFoods', HASHBYTES('SHA1', 'password2'), 'John', 98772301, 'John Foods', 'www.JohnFoods.com', 'F&B', '11-50', 'Current', 'John@JohnFoods.com'),
('TribeA', HASHBYTES('SHA1', 'secret0'), 'Sushma', 91629540, 'Tribe Accelerator', 'www.tribeaccelerator.com', 'IT', '11-50', 'Admin', 'Sushma@TribeA.com');

CREATE TABLE Calendar
(
	CalEventId INT NOT NULL,
	CalSubject NVARCHAR(100),
	CalDescription NVARCHAR(300),
	StartDT DATETIME NOT NULL,
	EndDT DATETIME NULL,
	ThemeColor  NVARCHAR(10),
	IsFullDay	BIT,
	PRIMARY KEY (CalEventId)
);

INSERT INTO Calendar(CalEventId, CalSubject, CalDescription, StartDT, EndDT, ThemeColor, IsFullDay) VALUES
(1, 'Event1', 'Test1', '2020-06-20 12:00', '2020-06-20 14:00', 'green', 0),
(2, 'Event2', 'Test2', '2020-06-20 12:00', '2020-06-20 14:00', 'green', 0),
(3, 'Event3', 'Test3', '2020-06-20 12:00', '2020-06-20 14:00', 'green', 0),
(4, 'Event4', 'Test4', '2020-06-20 12:00', '2020-06-20 14:00', 'green', 0);

CREATE TABLE Events
(
   events_id     		INT IDENTITY(1,1) NOT NULL,
   event_name   		VARCHAR(45) NOT NULL,
   event_description    VARCHAR(450) NOT NULL,
   venue    			VARCHAR(75) NOT NULL,
   category				VARCHAR(25) NOT NULL,
   start_dt   			DATETIME NOT NULL,
   end_dt	     		DATETIME NOT NULL,
   docName				VARCHAR(50) NULL,
   status				Varchar(10) NOT NULL,
   repeatOnNo			INT NULL,
   repeatOnType			VARCHAR(15) NULL,
   occurence			INT NULL,
   CompanyType			INT NOT NULL,
   CalEventId			INT NOT NULL,
   PRIMARY KEY (event_id),
   FOREIGN KEY (CompanyType) REFERENCES CompanyType(CompanyTypeId),
   FOREIGN KEY (CalEventId) REFERENCES Calendar(CalEventId)
);
SET IDENTITY_INSERT Events ON;
INSERT INTO Events(events_id, event_name, event_description, venue, category, start_dt, end_dt, docName, status, repeatOnNo, repeatOnType, occurence, CompanyType, EventId) VALUES
(1, 'Event1',	'Test1',	'Singapore Expo',	'Masterclass',			'2020-06-20 12:00', '2020-06-20 14:00', NULL,'Past', NULL, NULL, NULL, 2 , 1),
(2, 'Event2',	'Test2',	'Punggol SAFRA',	'Networking',			'2020-04-26 13:00', '2020-04-26 15:00', NULL, 'Past', NULL, NULL, NULL, 3, 2),
(3, 'Event3',	'Test3',	'Suntec City',		'Panels/Fireside Chat',	'2020-03-08 15:00', '2020-03-08 17:00', NULL, 'Past', NULL, NULL, NULL, 4, 3),
(4, 'Event4',	'Test4',	'Suntec City',		'Consultations',		'2020-08-08 15:00', '2020-08-08 17:00', NULL, 'Upcoming', NULL, NULL, NULL, 2, 4);
SET IDENTITY_INSERT Events OFF;



CREATE TABLE User_has_Event
(
	UHE_id INT IDENTITY(1,10),
	UserName VARCHAR(50) NOT NULL,
	event_id INT NOT NULL,
	feedback_id INT NOT NULL,
	PRIMARY KEY (UHE_id),
	FOREIGN KEY (UserName) REFERENCES AppUser(UserName),
	FOREIGN KEY (event_id) REFERENCES Events(event_id)
);


CREATE TABLE FeedbackAns
(
	Fb_ans_id INT NOT NULL,
	answer1 VARCHAR NULL,
	answer2 VARCHAR NULL,
	answer3 VARCHAR NULL,
	answer4 VARCHAR NULL,
	answer5 VARCHAR NULL,
	answer6 VARCHAR NULL,
	answer7 VARCHAR NULL,
	answer8 VARCHAR NULL,
	answer9 VARCHAR NULL,
	answer10 VARCHAR NULL,
	answer11 VARCHAR NULL,
	answer12 VARCHAR NULL,
	answer13 VARCHAR NULL,
	answer14 VARCHAR NULL,
	answer15 VARCHAR NULL,
	answer16 VARCHAR NULL,
	answer17 VARCHAR NULL,
	answer18 VARCHAR NULL,
	answer19 VARCHAR NULL,
	answer20 VARCHAR NULL,
	answer21 VARCHAR NULL,
	answer22 VARCHAR NULL,
	UHE_id INT NOT NULL,
	PRIMARY KEY (Fb_ans_id),
	FOREIGN KEY (UHE_id) REFERENCES User_has_Event(UHE_id)
);







